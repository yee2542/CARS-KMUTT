version: "3.4"
services:
  backend:
    container_name: CARS-backend
    restart: always
    depends_on:
      - mongodb-shard0
    environment:
      WAIT_HOSTS: mongo:27017
      NODE_ENV: "production"
      TZ: Asia/Bangkok
      ORIGIN: http(|s):\/\/bookmyspace.kmutt.ac.th
      DATABASE_CONNECTION: "mongodb://mongos:27017/cars-kmutt"
      DATABASE_USERAME: root
      DATABASE_PASSWORD: kmuttC@Rs2020
      DATABASE_AUTH_SOURCE: admin
      JWT_SECRET_KEY: secretKeyJwtEiei
      JWT_EXPIRES: 3600s
      OPS_KEY: "kmuttC@Rs2020.OpsKey"
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: uat
    logging:
      options:
        max-size: 50m
  backend-backup:
    container_name: CARS-backend-backup
    restart: always
    depends_on:
      - mongodb-shard0
    environment:
      WAIT_HOSTS: mongo:27017
      NODE_ENV: "production"
      TZ: Asia/Bangkok
      ORIGIN: http(|s):\/\/bookmyspace.kmutt.ac.th
      DATABASE_CONNECTION: "mongodb://mongos:27017/cars-kmutt"
      DATABASE_USERAME: root
      DATABASE_PASSWORD: kmuttC@Rs2020
      DATABASE_AUTH_SOURCE: admin
      JWT_SECRET_KEY: secretKeyJwtEiei
      JWT_EXPIRES: 3600s
      OPS_KEY: "kmuttC@Rs2020.OpsKey"
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: uat
    logging:
      options:
        max-size: 50m
  cars-proxy:
    container_name: CARS-proxy
    restart: on-failure
    build:
      context: ./proxy
      dockerfile: Dockerfile
    ports:
      - "80:80"
  frontend:
    container_name: CARS-frontend
    restart: always
    environment:
      NODE_ENV: "production"
    build:
      context: ./frontend-tsx
      dockerfile: Dockerfile
      target: nginx
      args:
        REACT_APP_GA_KEY: "G-VSK5G6Y1LF"
        REACT_APP_BACKEND_ENDPOINT: "https://bookmyspace.kmutt.ac.th/api"
        REACT_APP_TIMEZONE: Asia/Bangkok
    logging:
      driver: none
  mongos:
    image: "bitnami/mongodb-sharded:4.2"
    restart: on-failure
    environment:
      MONGODB_ADVERTISED_HOSTNAME: mongodb-mogos
      MONGODB_SHARDING_MODE: mongos
      MONGODB_CFG_PRIMARY_HOST: mongodb-cfg
      MONGODB_CFG_REPLICA_SET_NAME: cfgreplicaset
      MONGODB_REPLICA_SET_KEY: kmuttCARs
      MONGODB_ROOT_PASSWORD: kmuttC@Rs2020
      TZ: Asia/Bangkok
    ports:
      - "27017:27017"
  mongodb-shard0:
    image: "bitnami/mongodb-sharded:4.2"
    restart: on-failure
    environment:
      MONGODB_ADVERTISED_HOSTNAME: mongodb-shard0
      MONGODB_SHARDING_MODE: shardsvr
      MONGODB_MONGOS_HOST: mongodb-sharded
      MONGODB_ROOT_PASSWORD: kmuttC@Rs2020
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_KEY: kmuttCARs
      MONGODB_REPLICA_SET_NAME: shard0
      TZ: Asia/Bangkok
    volumes:
      - "./db/shard-0:/bitnami"
  mongodb-cfg:
    image: "bitnami/mongodb-sharded:4.2"
    restart: on-failure
    environment:
      MONGODB_ADVERTISED_HOSTNAME: mongodb-cfg
      MONGODB_SHARDING_MODE: configsvr
      MONGODB_ROOT_PASSWORD: kmuttC@Rs2020
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_KEY: kmuttCARs
      MONGODB_REPLICA_SET_NAME: cfgreplicaset
      TZ: Asia/Bangkok
    volumes:
      - "./db/cfg:/bitnami"
